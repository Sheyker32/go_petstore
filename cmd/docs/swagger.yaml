basePath: /
definitions:
  handler.AuthResponse:
    properties:
      data:
        $ref: '#/definitions/handler.LoginData'
      error_code:
        type: integer
      success:
        type: boolean
    type: object
  handler.Data:
    properties:
      message:
        type: string
    type: object
  handler.InventoryData:
    properties:
      inventory:
        additionalProperties:
          type: integer
        type: object
      message:
        type: string
    type: object
  handler.LoginData:
    properties:
      message:
        type: string
      token:
        type: string
    type: object
  handler.OrderData:
    properties:
      message:
        type: string
      order:
        $ref: '#/definitions/petstore.Order'
    type: object
  handler.PetData:
    properties:
      message:
        type: string
      pet:
        $ref: '#/definitions/petstore.Pet'
    type: object
  handler.PetsData:
    properties:
      message:
        type: string
      pets:
        items:
          $ref: '#/definitions/petstore.Pet'
        type: array
    type: object
  handler.ResponseData:
    properties:
      data:
        $ref: '#/definitions/handler.Data'
      success:
        type: boolean
    type: object
  handler.ResponseInventory:
    properties:
      data:
        $ref: '#/definitions/handler.InventoryData'
      success:
        type: boolean
    type: object
  handler.ResponseOrder:
    properties:
      data:
        $ref: '#/definitions/handler.OrderData'
      success:
        type: boolean
    type: object
  handler.ResponsePet:
    properties:
      data:
        $ref: '#/definitions/handler.PetData'
      success:
        type: boolean
    type: object
  handler.ResponsePets:
    properties:
      data:
        $ref: '#/definitions/handler.PetsData'
      success:
        type: boolean
    type: object
  handler.ResponseUser:
    properties:
      data:
        $ref: '#/definitions/handler.UserData'
      success:
        type: boolean
    type: object
  handler.ResponseUsers:
    properties:
      data:
        $ref: '#/definitions/handler.UsersData'
      success:
        type: boolean
    type: object
  handler.UserData:
    properties:
      message:
        type: string
      user:
        $ref: '#/definitions/petstore.User'
    type: object
  handler.UsersData:
    properties:
      message:
        type: string
      users:
        items:
          $ref: '#/definitions/petstore.User'
        type: array
    type: object
  petstore.Category:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  petstore.Order:
    properties:
      complete:
        type: boolean
      id:
        type: integer
      petId:
        type: integer
      quantity:
        type: integer
      shipDate:
        type: string
      status:
        allOf:
        - $ref: '#/definitions/petstore.OrderStatus'
        description: Status Order Status
    type: object
  petstore.OrderStatus:
    enum:
    - approved
    - delivered
    - placed
    type: string
    x-enum-varnames:
    - Approved
    - Delivered
    - Placed
  petstore.Pet:
    properties:
      category:
        $ref: '#/definitions/petstore.Category'
      id:
        type: integer
      name:
        type: string
      photoUrls:
        items:
          type: string
        type: array
      status:
        allOf:
        - $ref: '#/definitions/petstore.PetStatus'
        description: Status pet status in the store
      tags:
        items:
          $ref: '#/definitions/petstore.Tag'
        type: array
    type: object
  petstore.PetStatus:
    enum:
    - available
    - pending
    - sold
    type: string
    x-enum-varnames:
    - PetStatusAvailable
    - PetStatusPending
    - PetStatusSold
  petstore.Tag:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  petstore.User:
    properties:
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        description: UserStatus User Status
        type: integer
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Documentation for petstore
  title: Swagger Petstore
  version: "1.0"
paths:
  /pet:
    post:
      consumes:
      - application/json
      description: create pet
      parameters:
      - description: create pet
        in: body
        name: pet
        required: true
        schema:
          $ref: '#/definitions/petstore.Pet'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseData'
      security:
      - ApiKeyAuth: []
      summary: create pet
      tags:
      - pet
    put:
      consumes:
      - application/json
      description: update pet
      parameters:
      - description: update pet
        in: body
        name: pet
        required: true
        schema:
          $ref: '#/definitions/petstore.Pet'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseData'
      security:
      - ApiKeyAuth: []
      summary: update pet
      tags:
      - pet
  /pet/{petId}:
    delete:
      consumes:
      - application/json
      description: delete
      parameters:
      - description: ' '
        in: path
        name: petId
        required: true
        type: integer
      - in: header
        name: api_key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseData'
      security:
      - ApiKeyAuth: []
      summary: delete pet
      tags:
      - pet
    get:
      consumes:
      - application/json
      description: get pet
      parameters:
      - description: pet id
        in: path
        name: petId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponsePet'
      security:
      - ApiKeyAuth: []
      summary: find pet by id
      tags:
      - pet
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: update
      parameters:
      - description: ID of pet that needs to be updated
        in: path
        name: petId
        required: true
        type: integer
      - description: Updated name of the pet
        in: formData
        name: name
        type: string
      - description: Updated status of the pet
        in: formData
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseData'
      security:
      - ApiKeyAuth: []
      summary: update pet with form
      tags:
      - pet
  /pet/findByStatus:
    get:
      consumes:
      - application/json
      description: find pet
      parameters:
      - collectionFormat: csv
        description: Status values that need to be considered for filter
        in: query
        items:
          enum:
          - available
          - pending
          - sold
          type: string
        name: status
        required: true
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponsePets'
      security:
      - ApiKeyAuth: []
      summary: find pets by status
      tags:
      - pet
  /pet/findByTags:
    get:
      consumes:
      - application/json
      description: find pet
      parameters:
      - collectionFormat: csv
        description: find pet by tags
        in: query
        items:
          type: string
        name: tags
        required: true
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponsePets'
      security:
      - ApiKeyAuth: []
      summary: find pets by tags
      tags:
      - pet
  /store/inventory:
    get:
      consumes:
      - application/json
      description: get
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseInventory'
      security:
      - ApiKeyAuth: []
      summary: get inventory
      tags:
      - store
  /store/order:
    post:
      consumes:
      - application/json
      description: create order
      parameters:
      - description: order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/petstore.Order'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseOrder'
      summary: place order
      tags:
      - store
  /store/order/{orderId}:
    delete:
      consumes:
      - application/json
      description: delete
      parameters:
      - description: id
        in: path
        name: orderId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseData'
      summary: delete order
      tags:
      - store
    get:
      consumes:
      - application/json
      description: get
      parameters:
      - description: id
        in: path
        name: orderId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseOrder'
      summary: get order
      tags:
      - store
  /user:
    post:
      consumes:
      - application/json
      description: created user object
      parameters:
      - description: create user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/petstore.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseUser'
      summary: create user
      tags:
      - user
  /user/{username}:
    delete:
      consumes:
      - application/json
      description: delete
      parameters:
      - description: name
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseData'
      summary: delete user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: get user
      parameters:
      - description: get user
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseUser'
      summary: get user by name
      tags:
      - user
    put:
      consumes:
      - application/json
      description: update
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/petstore.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseData'
      summary: update user
      tags:
      - user
  /user/createWithList:
    post:
      consumes:
      - application/json
      description: create
      parameters:
      - description: create list user
        in: body
        name: user
        required: true
        schema:
          items:
            $ref: '#/definitions/petstore.User'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseUsers'
      summary: create list user
      tags:
      - user
  /user/login:
    get:
      consumes:
      - application/json
      description: auth
      parameters:
      - description: Password The password for login in clear text
        in: query
        name: password
        type: string
      - description: Username The user name for login
        in: query
        name: username
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.AuthResponse'
      summary: login user
      tags:
      - user
  /user/logout:
    get:
      consumes:
      - application/json
      description: logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseData'
      security:
      - ApiKeyAuth: []
      summary: logout user
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
